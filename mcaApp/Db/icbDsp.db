# Database for Canberra 9660 DSP
#   Mark Rivers
#   September 16, 2000

# Amplifier setup
grecord(mbbo,"$(P)$(DSP)CG") {
    field(DESC,"Coarse gain")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"x5")
    field(ONVL,"1")
    field(ONST,"x15")
    field(TWVL,"2")
    field(TWST,"x40")
    field(THVL,"3")
    field(THST,"x120")
    field(FRVL,"4")
    field(FRST,"x330")
    field(FVVL,"5")
    field(FVST,"x960")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 1)")
}
grecord(ao,"$(P)$(DSP)FG") {
    field(DESC,"Fine gain")
    field(PINI,"YES")
    field(DRVL,"0.4")
    field(LOPR,"0.4")
    field(DRVH,"1.6")
    field(HOPR,"1.6")
    field(PREC,"4")
    field(VAL,"1.0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 42)")
}
grecord(ao,"$(P)$(DSP)SFG") {
    field(DESC,"Super fine gain")
    field(PINI,"YES")
    field(DRVL,"0.0")
    field(LOPR,"0.0")
    field(DRVH,"0.03")
    field(HOPR,"0.03")
    field(PREC,"6")
    field(VAL,"0.0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 43)")
}

# ADC setup
grecord(mbbo,"$(P)$(DSP)ADCG") {
    field(DESC,"ADC conversion gain")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"256")
    field(ONVL,"1")
    field(ONST,"512")
    field(TWVL,"2")
    field(TWST,"1024")
    field(THVL,"3")
    field(THST,"2048")
    field(FRVL,"4")
    field(FRST,"4096")
    field(FVVL,"5")
    field(FVST,"8192")
    field(SXVL,"6")
    field(SXST,"16384")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 49)")
}
grecord(mbbo,"$(P)$(DSP)ADCR") {
    field(DESC,"ADC conversion range")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"256")
    field(ONVL,"1")
    field(ONST,"512")
    field(TWVL,"2")
    field(TWST,"1024")
    field(THVL,"3")
    field(THST,"2048")
    field(FRVL,"4")
    field(FRST,"4096")
    field(FVVL,"5")
    field(FVST,"8192")
    field(SXVL,"6")
    field(SXST,"16384")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 50)")
}
grecord(mbbo,"$(P)$(DSP)MCA") {
    field(DESC,"MCA type")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"AIM/ACCUSPEC")
    field(ONVL,"1")
    field(ONST,"S100/S35")
    field(TWVL,"2")
    field(TWST,"SILENA")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 23)")
}
grecord(ao,"$(P)$(DSP)ADCO") {
    field(DESC,"ADC digital offset")
    field(PINI,"YES")
    field(DRVL,"0")
    field(LOPR,"0")
    field(DRVH,"16128")
    field(HOPR,"16128")
    field(PREC,"0")
    field(VAL,"0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 51)")
}
grecord(ao,"$(P)$(DSP)LLD") {
    field(DESC,"ADC lower level discr.")
    field(PINI,"YES")
    field(DRVL,"0")
    field(LOPR,"0")
    field(DRVH,"100")
    field(HOPR,"100")
    field(PREC,"3")
    field(VAL,"1")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 48)")
}
grecord(ao,"$(P)$(DSP)ZERO") {
    field(DESC,"Zero DAC")
    field(PINI,"YES")
    field(DRVL,"-3.215")
    field(LOPR,"-3.125")
    field(DRVH,"3.125")
    field(HOPR,"3.125")
    field(PREC,"3")
    field(VAL,"0.")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 44)")
}


# Trapezoid filter setup
grecord(ao,"$(P)$(DSP)RT") {
    field(DESC,"Rise time")
    field(PINI,"YES")
    field(DRVL,"0.4")
    field(LOPR,"0.4")
    field(DRVH,"28.0")
    field(HOPR,"28.0")
    field(PREC,"1")
    field(VAL,"2.0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 53)")
}
grecord(ao,"$(P)$(DSP)FT") {
    field(DESC,"Flat top time")
    field(PINI,"YES")
    field(DRVL,"0.0")
    field(LOPR,"0.0")
    field(DRVH,"3.0")
    field(HOPR,"3.0")
    field(PREC,"1")
    field(VAL,"1.0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 54)")
}
grecord(mbbo,"$(P)$(DSP)BLR") {
    field(DESC,"Baseline restore")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Auto")
    field(ONVL,"1")
    field(ONST,"Soft")
    field(TWVL,"2")
    field(TWST,"Medium")
    field(THVL,"3")
    field(THST,"Hard")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 6)")
}
grecord(mbbo,"$(P)$(DSP)MI") {
    field(DESC,"M-term Index")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"M=Term #1")
    field(ONVL,"1")
    field(ONST,"M=Term #2")
    field(TWVL,"2")
    field(TWST,"M=Term #3")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 60)")
}
grecord(ao,"$(P)$(DSP)MT") {
    field(DESC,"M-Term value")
    field(PINI,"NO")
    field(DRVL,"0.0")
    field(LOPR,"0.0")
    field(DRVH,"1000.0")
    field(HOPR,"1000")
    field(PREC,"3")
    field(VAL,"1.0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 47)")
}
grecord(mbbo,"$(P)$(DSP)PZM") {
    field(DESC,"Pole zero mode")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Auto")
    field(ONVL,"1")
    field(ONST,"Manual")
    field(TWVL,"2")
    field(TWST,"Reset")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 8)")
}
grecord(ao,"$(P)$(DSP)PZ") {
    field(DESC,"Pole zero")
    field(PINI,"YES")
    field(DRVL,"0")
    field(LOPR,"0")
    field(DRVH,"4095")
    field(HOPR,"4095")
    field(PREC,"0")
    field(VAL,"1000")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 7)")
}
grecord(ao,"$(P)$(DSP)THR") {
    field(DESC,"Threshold register")
    field(PINI,"YES")
    field(DRVL,"0")
    field(LOPR,"0")
    field(DRVH,"65535")
    field(HOPR,"65535")
    field(PREC,"0")
    field(VAL,"0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 57)")
}
# Note: the DSP supports 20 values for cutoff frequency but MBBO record only
# has 16 possible values, so we omit 4 choices: 400, 600, 800 and 2500 Hz.
grecord(mbbo,"$(P)$(DSP)FRQ") {
    field(DESC,"Cutoff Frequency")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"100 Hz")
    field(ONVL,"1")
    field(ONST,"200 Hz")
    field(TWVL,"2")
    field(TWST,"300 Hz")
    field(THVL,"4")
    field(THST,"500 Hz")
    field(FRVL,"6")
    field(FRST,"700 Hz")
    field(FVVL,"9")
    field(FVST,"1000 Hz")
    field(SXVL,"10")
    field(SXST,"1500 Hz")
    field(SVVL,"11")
    field(SVST,"2000 Hz")
    field(EIVL,"13")
    field(EIST,"3000 Hz")
    field(NIVL,"14")
    field(NIST,"5000 Hz")
    field(TEVL,"15")
    field(TEST,"7500 Hz")
    field(ELVL,"16")
    field(ELST,"10000 Hz")
    field(TVVL,"17")
    field(TVST,"15000 Hz")
    field(TTVL,"18")
    field(TTST,"20000 Hz")
    field(FTVL,"19")
    field(FTST,"30000 Hz")
    field(FFVL,"20")
    field(FFST,"50000 Hz")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 58)")
}

# Stabilizer setup
grecord(mbbo,"$(P)$(DSP)GCOR") {
    field(DESC,"Gain range")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Ge  (+/- 1%)")
    field(ONVL,"1")
    field(ONST,"NaI (+/- 10%)")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 34)")
}
grecord(mbbo,"$(P)$(DSP)ZCOR") {
    field(DESC,"Zero range")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Ge  (+/- 1%)")
    field(ONVL,"1")
    field(ONST,"NaI (+/- 10%)")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 45)")
}
grecord(mbbo,"$(P)$(DSP)GMOD") {
    field(DESC,"Gain mode")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Off")
    field(ONVL,"1")
    field(ONST,"On")
    field(TWVL,"2")
    field(TWST,"Hold")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 32)")
}
grecord(mbbo,"$(P)$(DSP)ZMOD") {
    field(DESC,"Zero mode")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Off")
    field(ONVL,"1")
    field(ONST,"On")
    field(TWVL,"2")
    field(TWST,"Hold")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 33)")
}
grecord(mbbo,"$(P)$(DSP)GDIV") {
    field(DESC,"Gain correction divider")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"1")
    field(ONVL,"1")
    field(ONST,"2")
    field(TWVL,"2")
    field(TWST,"4")
    field(THVL,"3")
    field(THST,"8")
    field(FRVL,"4")
    field(FRST,"16")
    field(FVVL,"5")
    field(FVST,"32")
    field(SXVL,"6")
    field(SXST,"64")
    field(SVVL,"7")
    field(SVST,"128")
    field(EIVL,"8")
    field(EIST,"256")
    field(NIVL,"9")
    field(NIST,"512")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 55)")
}
grecord(mbbo,"$(P)$(DSP)ZDIV") {
    field(DESC,"Zero correction divider")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"1")
    field(ONVL,"1")
    field(ONST,"2")
    field(TWVL,"2")
    field(TWST,"4")
    field(THVL,"3")
    field(THST,"8")
    field(FRVL,"4")
    field(FRST,"16")
    field(FVVL,"5")
    field(FVST,"32")
    field(SXVL,"6")
    field(SXST,"64")
    field(SVVL,"7")
    field(SVST,"128")
    field(EIVL,"8")
    field(EIST,"256")
    field(NIVL,"9")
    field(NIST,"512")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 56)")
}
grecord(ao,"$(P)$(DSP)GSPC") {
    field(DESC,"Gain spacing")
    field(PINI,"YES")
    field(DRVL,"2")
    field(LOPR,"2")
    field(DRVH,"512")
    field(HOPR,"512")
    field(PREC,"0")
    field(VAL,"256")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 28)")
}
grecord(ao,"$(P)$(DSP)ZSPC") {
    field(DESC,"Zero spacing")
    field(PINI,"YES")
    field(DRVL,"2")
    field(LOPR,"2")
    field(DRVH,"512")
    field(HOPR,"512")
    field(PREC,"0")
    field(VAL,"256")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 29)")
}
grecord(ao,"$(P)$(DSP)GWND") {
    field(DESC,"Gain window")
    field(PINI,"YES")
    field(DRVL,"1")
    field(LOPR,"1")
    field(DRVH,"128")
    field(HOPR,"128")
    field(PREC,"0")
    field(VAL,"64")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 26)")
}
grecord(ao,"$(P)$(DSP)ZWND") {
    field(DESC,"Zero window")
    field(PINI,"YES")
    field(DRVL,"1")
    field(LOPR,"1")
    field(DRVH,"128")
    field(HOPR,"128")
    field(PREC,"0")
    field(VAL,"64")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 27)")
}
grecord(ao,"$(P)$(DSP)GCNT") {
    field(DESC,"Gain centroid")
    field(PINI,"YES")
    field(DRVL,"10")
    field(LOPR,"10")
    field(DRVH,"16376")
    field(HOPR,"16376")
    field(PREC,"0")
    field(VAL,"64")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 24)")
}
grecord(ao,"$(P)$(DSP)ZCNT") {
    field(DESC,"Zero centroid")
    field(PINI,"YES")
    field(DRVL,"10")
    field(LOPR,"10")
    field(DRVH,"16376")
    field(HOPR,"16376")
    field(PREC,"0")
    field(VAL,"64")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 25)")
}
grecord(ao,"$(P)$(DSP)GRAT") {
    field(DESC,"Gain ratio")
    field(PINI,"YES")
    field(DRVL,"0.01")
    field(LOPR,"0.01")
    field(DRVH,"100.")
    field(HOPR,"100.")
    field(PREC,"2")
    field(VAL,"1.0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 40)")
}
grecord(ao,"$(P)$(DSP)ZRAT") {
    field(PINI,"YES")
    field(DESC,"Zero ratio")
    field(DRVL,"0.01")
    field(LOPR,"0.01")
    field(DRVH,"100.")
    field(HOPR,"100.")
    field(PREC,"2")
    field(VAL,"1.0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 41)")
}
grecord(mbbo,"$(P)$(DSP)RES") {
    field(DESC,"Stabilizer reset")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Done")
    field(ONVL,"1")
    field(ONST,"Reset")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 35)")
}
# Miscellaneous setup
grecord(mbbo,"$(P)$(DSP)INPP") {
    field(DESC,"Input polarity")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Positive")
    field(ONVL,"1")
    field(ONST,"Negative")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 14)")
}
grecord(mbbo,"$(P)$(DSP)INHP") {
    field(DESC,"Inhibit polarity")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Positive")
    field(ONVL,"1")
    field(ONST,"Negative")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 15)")
}
grecord(mbbo,"$(P)$(DSP)TINH") {
    field(DESC,"TRP Inhibit mode")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Normal")
    field(ONVL,"1")
    field(ONST,"Reset")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 61)")
}
grecord(mbbo,"$(P)$(DSP)FDM") {
    field(DESC,"Fast discr. mode")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Auto")
    field(ONVL,"1")
    field(ONST,"Manual")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 19)")
}
grecord(ao,"$(P)$(DSP)FD") {
    field(DESC,"Fast discriminator")
    field(PINI,"YES")
    field(DRVL,"0.0")
    field(LOPR,"0.0")
    field(DRVH,"100.")
    field(HOPR,"100.")
    field(PREC,"1")
    field(VAL,"1.0")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 52)")
}
grecord(mbbo,"$(P)$(DSP)PURM") {
    field(DESC,"Pileup reject mode")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Off")
    field(ONVL,"1")
    field(ONST,"On")
    field(TWVL,"2")
    field(TWST,"LFC")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 16)")
}
grecord(mbbo,"$(P)$(DSP)GATM") {
    field(DESC,"Gate mode")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Anti-coinc.")
    field(ONVL,"1")
    field(ONST,"Coincidence")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 17)")
}
grecord(mbbo,"$(P)$(DSP)OUTM") {
    field(DESC,"Output mode")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Trapezoid")
    field(ONVL,"1")
    field(ONST,"Tail")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 18)")
}
grecord(mbbo,"$(P)$(DSP)GD") {
    field(DESC,"Guard setting")
    field(PINI,"YES")
    field(ZRVL,"11")
    field(ZRST,"Off")
    field(ONVL,"12")
    field(ONST,"1.2")
    field(TWVL,"13")
    field(TWST,"1.3")
    field(THVL,"14")
    field(THST,"1.4")
    field(FRVL,"15")
    field(FRST,"1.5")
    field(FVVL,"16")
    field(FVST,"1.6")
    field(SXVL,"17")
    field(SXST,"1.7")
    field(SVVL,"18")
    field(SVST,"1.8")
    field(EIVL,"19")
    field(EIST,"1.9")
    field(NIVL,"20")
    field(NIST,"2.0")
    field(TEVL,"21")
    field(TEST,"2.1")
    field(ELVL,"22")
    field(ELST,"2.2")
    field(TVVL,"23")
    field(TVST,"2.3")
    field(TTVL,"24")
    field(TTST,"2.4")
    field(FTVL,"25")
    field(FTST,"2.5")
    field(RVAL,"11")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 22)")
}
grecord(mbbo,"$(P)$(DSP)TDC") {
    field(DESC,"Test DAC mode")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Baseline")
    field(ONVL,"1")
    field(ONST,"Threshold")
    field(TWVL,"2")
    field(TWST,"LLD")
    field(THVL,"3")
    field(THST,"Off")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 59)")
}
grecord(mbbo,"$(P)$(DSP)THRI") {
    field(DESC,"Throughput index")
    field(PINI,"YES")
    field(ZRVL,"0")
    field(ZRST,"Deadtime")
    field(ONVL,"1")
    field(ONST,"Input rate")
    field(TWVL,"2")
    field(TWST,"DSP rate")
    field(THVL,"3")
    field(THST,"MCA rate")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 37)")
}
grecord(ao,"$(P)$(DSP)LTRM") {
    field(DESC,"Live time trim")
    field(PINI,"YES")
    field(DRVL,"0")
    field(LOPR,"0")
    field(DRVH,"1000")
    field(HOPR,"1000")
    field(PREC,"0")
    field(VAL,"250.")
    field(DTYP, "asynFloat64")
    field(OUT,"@asyn($(PORT) 20)")
}
grecord(mbbo,"$(P)$(DSP)BBRN") {
    field(DESC,"Burr-Brown delay")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Off")
    field(ONVL,"1")
    field(ONST,"On")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 21)")
}
grecord(mbbo,"$(P)$(DSP)AUTO_PZ") {
    field(DESC,"Start auto-PZ")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Done")
    field(ONVL,"1")
    field(ONST,"Start")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 240)")
}
grecord(mbbo,"$(P)$(DSP)AUTO_BDC") {
    field(DESC,"Start auto-BDC")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Done")
    field(ONVL,"1")
    field(ONST,"Start")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 241)")
}
grecord(mbbo,"$(P)$(DSP)CLEAR") {
    field(DESC,"Clear errors, abort BDC/PZ")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Done")
    field(ONVL,"1")
    field(ONST,"Clear")
    field(DTYP, "asynUInt32Digital")
    field(OUT,"@asyn($(PORT) 242)")
}

# This is where all of the readback records begin
grecord(fanout,"$(P)$(DSP)READ_SCAN") {
    field(SCAN, "10 second")
    field(DESC,"Readback scanning")
    field(LNK1,"$(P)$(DSP)READ_STAB PP MS")
    field(LNK2,"$(P)$(DSP)READ_FILTER PP MS")
    field(LNK3,"$(P)$(DSP)READ_STAT PP MS")
    field(LNK4,"$(P)$(DSP)READ_RATES PP MS")
}

# Stabilizer readback
grecord(fanout,"$(P)$(DSP)READ_STAB") {
    field(DESC,"Stabilizer readback")
    field(LNK1,"$(P)$(DSP)READ_GMOD.PROC PP MS")
    field(LNK2,"$(P)$(DSP)READ_ZMOD.PROC PP MS")
}
grecord(mbbi,"$(P)$(DSP)READ_GMOD") {
    field(DESC,"Gain mode")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Off")
    field(ONVL,"1")
    field(ONST,"On")
    field(TWVL,"2")
    field(TWST,"Hold")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 32)")
    field(FLNK, "$(P)$(DSP)GOVR PP MS")
}
grecord(mbbi,"$(P)$(DSP)GOVR") {
    field(DESC,"Gain overrange")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"OK")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Overrange")
    field(ONSV, "MAJOR")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 244)")
    field(FLNK, "$(P)$(DSP)GOVF PP MS")
}
grecord(mbbi,"$(P)$(DSP)GOVF") {
    field(DESC,"Gain overflow")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"OK")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Overflow")
    field(ONSV, "MAJOR")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 245)")
    field(FLNK, "$(P)$(DSP)SGN PP MS")
}
grecord(ai,"$(P)$(DSP)SGN") {
    field(DESC,"Stabilizer gain")
    field(PINI,"NO")
    field(LOPR,"0")
    field(HOPR,"8191")
    field(PREC,"0")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT) 62)")
}
grecord(mbbi,"$(P)$(DSP)READ_ZMOD") {
    field(DESC,"Zero mode")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Off")
    field(ONVL,"1")
    field(ONST,"On")
    field(TWVL,"2")
    field(TWST,"Hold")
    field(FLNK, "$(P)$(DSP)ZOVR PP MS")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 33)")
}
grecord(mbbi,"$(P)$(DSP)ZOVR") {
    field(DESC,"Zero overrange")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"OK")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Overrange")
    field(ONSV, "MAJOR")
    field(FLNK, "$(P)$(DSP)ZOVF PP MS")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 246)")
}
grecord(mbbi,"$(P)$(DSP)ZOVF") {
    field(DESC,"Zero overflow")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"OK")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Overflow")
    field(ONSV, "MAJOR")
    field(FLNK, "$(P)$(DSP)SZER PP MS")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 247)")
}
grecord(ai,"$(P)$(DSP)SZER") {
    field(DESC,"Stabilizer zero")
    field(PINI,"NO")
    field(LOPR,"0")
    field(HOPR,"4095")
    field(PREC,"0")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT) 63)")
}

# Filter readback
grecord(fanout,"$(P)$(DSP)READ_FILTER") {
    field(DESC,"PZ/BDC readback")
    field(LNK1,"$(P)$(DSP)READ_PZ.PROC PP MS")
    field(LNK2,"$(P)$(DSP)READ_FT.PROC PP MS")
    field(LNK3,"$(P)$(DSP)PZ_INFO.PROC PP MS")
    field(LNK4,"$(P)$(DSP)BDC_INFO.PROC PP MS")
}
grecord(ai,"$(P)$(DSP)READ_PZ") {
    field(DESC,"Actual pole-zero")
    field(PINI,"NO")
    field(LOPR,"0")
    field(HOPR,"4095.")
    field(PREC,"0")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT) 7)")
}
grecord(ai,"$(P)$(DSP)PZ_INFO") {
    field(DESC,"Auto PZ value")
    field(PINI,"NO")
    field(LOPR,"0")
    field(HOPR,"4095.")
    field(PREC,"0")
    field(FLNK, "$(P)$(DSP)PZAER PP MS")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT) 38)")
}
grecord(mbbi,"$(P)$(DSP)PZAER") {
    field(DESC,"PZ error")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"OK")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Rate too low")
    field(ONSV, "MINOR")
    field(TWVL,"2")
    field(TWST,"Timeout (noisy)")
    field(TWSV, "MINOR")
    field(THVL,"3")
    field(THST,"Rate too high")
    field(THSV, "MINOR")
    field(FRVL,"4")
    field(FRST,"Aborted")
    field(FRSV, "MINOR")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 248)")
}
grecord(ai,"$(P)$(DSP)READ_FT") {
    field(DESC,"Actual flat top")
    field(PINI,"NO")
    field(LOPR,"0")
    field(HOPR,"30.")
    field(PREC,"1")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT) 54)")
}
grecord(ai,"$(P)$(DSP)BDC_INFO") {
    field(DESC,"Optimum flat top")
    field(PINI,"NO")
    field(LOPR,"0")
    field(HOPR,"30.")
    field(PREC,"1")
    field(FLNK, "$(P)$(DSP)BDCAER PP MS")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT) 39)")
}
grecord(mbbi,"$(P)$(DSP)BDCAER") {
    field(DESC,"BDC error")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"OK")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Rate too low")
    field(ONSV, "MINOR")
    field(TWVL,"2")
    field(TWST,"Timeout (noisy)")
    field(TWSV, "MINOR")
    field(THVL,"3")
    field(THST,"Rate too high")
    field(THSV, "MINOR")
    field(FRVL,"4")
    field(FRST,"Aborted")
    field(FRSV, "MINOR")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 249)")
}

# Status readback
grecord(ai,"$(P)$(DSP)READ_STAT") {
    field(DESC,"Status flags")
    field(LOPR,"0")
    field(HOPR,"65535")
    field(PREC,"0")
    field(FLNK,"$(P)$(DSP)PZBZ PP MS")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT) 70)")
}
grecord(mbbi,"$(P)$(DSP)PZBZ") {
    field(DESC,"Pole-zero busy")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Done")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Busy")
    field(ONSV, "MINOR")
    field(FLNK,"$(P)$(DSP)BDBZ PP MS")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 250)")
}
grecord(mbbi,"$(P)$(DSP)BDBZ") {
    field(DESC,"BDC busy")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Done")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Busy")
    field(ONSV, "MINOR")
    field(FLNK,"$(P)$(DSP)MINT PP MS")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 251)")
}
grecord(mbbi,"$(P)$(DSP)MINT") {
    field(DESC,"Module reset")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"OK")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Reset")
    field(ONSV, "MINOR")
    field(FLNK,"$(P)$(DSP)DGBZ PP MS")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 252)")
}
grecord(mbbi,"$(P)$(DSP)DGBZ") {
    field(DESC,"Diagnostics busy")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"Done")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Busy")
    field(ONSV, "MINOR")
    field(FLNK,"$(P)$(DSP)MERR PP MS")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 253)")
}
grecord(mbbi,"$(P)$(DSP)MERR") {
    field(DESC,"Module error")
    field(PINI,"NO")
    field(ZRVL,"0")
    field(ZRST,"OK")
    field(ZRSV, "NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Error")
    field(ONSV, "MAJOR")
    field(DTYP, "asynUInt32Digital")
    field(INP,"@asyn($(PORT) 254)")
}

# Throughput readback
grecord(ai,"$(P)$(DSP)READ_RATES") {
    field(DESC,"Throughput value")
    field(PINI,"NO")
    field(LOPR,"0")
    field(HOPR,"1048575")
    field(PREC,"1")
    field(DTYP, "asynFloat64")
    field(INP,"@asyn($(PORT) 36)")
}
